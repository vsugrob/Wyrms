1)+ физичное движение платформы по вейпоинтам.
2) двухфазный гравитационный взрыв (первая фаза - притяжиение, вторая фаза - отталкивание).
	пример: https://www.youtube.com/watch?v=hX6HmGkymXQ
3) списывание quantity предмета в инвентаре после его использования.
4) веревка.
	- из сегментов фиксированной длины.
	- из резиночных сегментов.
	- разрываемость.
	- отрисовка через генерируемый меш (позволит отображать стыки сегментов плавными линиями).
5)+ баунс персонажа в прыжке: максимальное значение при горизонтальном полете, минимальное при вертикальном.
	сейчас баунс одинаков в любом направлении, что приводит к неестественному отскоку от потолка.
6) поработать над избавлением от gravity defying force в CharacterMovement. WalkFriction можно задать в 0 и
	регулировать ускорение иными методами.
7)+ проверить, нужно ли в unity 4.6 дизейблить+инейблить коллайдер для того чтобы применить новые свойства
	физ-материала.
	DONE: да, до сих пор надо.
8) добавить атрибут DisallowMultipleComponent для всех подходящих компонент.
9)+ уменьшить время жизни частиц дыма у осколков. так это будет больше похоже на горение.
10) ввести CollisionDamageFactor - сколько урона наносит объект ударяя цель, восприимчивую к DamageKind.Collision.
	это позволит избежать ситуаций OnDamage, Crate TNT (HealthComponent) received damage: 2.184592, inflictor: Large Fragment(Clone) (UnityEngine.PolygonCollider2D)
	хотя в данном конкретном случае (соударение "Crate TNT" и "Large Fragment") я думаю можно ничего не менять: путь осколок наносит урон по TNT.
11) тряска камеры при мощных взрывах (к примеру TNT).
	можно сделать следующую иерархию:
	CameraTransform
		CameraShakeTransform
			Camera
	компоненты работающие с позицией камеры должны обзавестить свойством CameraTransform, его надо будет через инспектор задавать
	в рутовый трансформ.
	сделать зависимость силы тряски от дальности до центра взрыва.
12)+ изучить код шейдера "Particles/Alpha Blended": почему "Tint Color", "Start Color" и "Color over Lifetime" не окрашивают части текстуры
	с низким значением alpha? это делает почти невозможным попытку создать действительно серый дым.
	UPD: подозрительная настройка AlphaTest Greater .01
	(DONE: текстура для партиклов была с черными краями - все каналы по нулям кроме альфы)
13) является ли юнитиевский Gradient одномерной текстурой с точки зрения шейдера?
	вроде нет. попробовать написать скрипт, создающий одномерную текстуру по градиентному свойству и передающий ее в шейдер.
14) попробовать разработать CharMovement на основе rigidbody2d.isKinematic = true. таким образом можно будет сделать невозможным
	чтобы один персонаж двигал другого, в то время как действие других объектов можно будет учитывать в обычном порядке.
	предвидится проблема: что если в легкий кинематический объект врезается тяжелый объект? даже если мы для кинематического объекта корректно
	просчитаем импульс после соударения, тяжелый объект ведь все равно посчитает эту "пушинку" непреодолимой стеной?
	UPD: да, удар как со стеной :(
15) может стоит пересмотреть реализацию MovingPlatform/LineFollower и переделать эту компоненту с использованием rigidbody2d.isKinematic?
	в текущей реализации SliderJoint2D имеет свойство жестко фиксировать объект вдоль линии, тогда как я хотел бы менее жесткую привязку.
	UPD: будет та же проблема удара с непреодолимой стеной, как и в пункте 14.
16) использовать новые компоненты юнити для FloatingText и HealthFloatingText. новая отрисовка текста в юнити позволяет добавлять outline в качестве эффекта.
	хотя судя по докам качество аутлайна ожидается такое же как и мои попытки его имитации через множественную отрисовку текста.
17) попробовать сделать дымовой след для осколков TNT аналогичный контр-страйковскому при взрыве бомбы. в отличие от предыдущей неудачной попытки
	можно сделать частицы дыма значительно больше, а эмиссию реже. скорее всего текстуру для частицы надо будет сделать не анимированной,
	поскольку при увеличении времени жизни партикла с одной секунды до, скажем, трех, анимация sprite sheet выглядит дерганой.